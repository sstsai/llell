# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

stages:
- stage: Build
  jobs:
  - job: Windows
    variables:
      vcpkgRsp: "vcpkg-x64-windows-static.txt"
    pool:
      vmImage: windows-latest
    steps:
    - checkout: self
      submodules: recursive
    - task: Cache@2
      displayName: 'Cache vcpkg artifacts'
      inputs:
        key: $(Build.SourcesDirectory)/$(vcpkgRsp) | "$(Build.SourcesDirectory)/.git/modules/vcpkg/HEAD" | "$(Agent.OS)"
        path: '$(Build.SourcesDirectory)/vcpkg'
    - task: run-vcpkg@0
      displayName: 'Run vcpkg'
      inputs:
        vcpkgArguments: '@$(Build.SourcesDirectory)/$(vcpkgRsp)'
        vcpkgDirectory: $(Build.SourcesDirectory)/vcpkg
    - task: run-cmake@0
      displayName: 'Run CMake'
      inputs:
        cmakeListsOrSettingsJson: CMakeListsTxtBasic
        useVcpkgToolchainFile: true
        buildDirectory: '$(Build.ArtifactStagingDirectory)'
        cmakeBuildType: 'Release'
        cmakeGenerator: 'Ninja'
  - job: Linux_GCC
    variables:
      vcpkgRsp: "vcpkg-x64-linux.txt"
      CC: gcc-10
      CXX: g++-10
    pool:
      vmImage: ubuntu-20.04
    steps:
    - checkout: self
      submodules: recursive
    - task: Cache@2
      displayName: 'Cache vcpkg artifacts'
      inputs:
        key: $(Build.SourcesDirectory)/$(vcpkgRsp) | "$(Build.SourcesDirectory)/.git/modules/vcpkg/HEAD" | "$(Agent.OS)"
        path: '$(Build.SourcesDirectory)/vcpkg'
    - task: run-vcpkg@0
      displayName: 'Run vcpkg'
      inputs:
        vcpkgArguments: '@$(Build.SourcesDirectory)/$(vcpkgRsp)'
        vcpkgDirectory: $(Build.SourcesDirectory)/vcpkg
    - task: run-cmake@0
      displayName: 'Run CMake'
      inputs:
        cmakeListsOrSettingsJson: CMakeListsTxtBasic
        useVcpkgToolchainFile: true
        buildDirectory: '$(Build.ArtifactStagingDirectory)'
        cmakeBuildType: 'Release'
        cmakeGenerator: 'Ninja'
  - job: MacOS
    variables:
      vcpkgRsp: "vcpkg-x64-osx.txt"
    pool:
      vmImage: macos-latest
    steps:
    - checkout: self
      submodules: recursive
    - task: Cache@2
      displayName: 'Cache vcpkg artifacts'
      inputs:
        key: $(Build.SourcesDirectory)/$(vcpkgRsp) | "$(Build.SourcesDirectory)/.git/modules/vcpkg/HEAD" | "$(Agent.OS)"
        path: '$(Build.SourcesDirectory)/vcpkg'
    - task: run-vcpkg@0
      displayName: 'Run vcpkg'
      inputs:
        vcpkgArguments: '@$(Build.SourcesDirectory)/$(vcpkgRsp)'
        vcpkgDirectory: $(Build.SourcesDirectory)/vcpkg
    - task: run-cmake@0
      displayName: 'Run CMake'
      inputs:
        cmakeListsOrSettingsJson: CMakeListsTxtBasic
        useVcpkgToolchainFile: true
        buildDirectory: '$(Build.ArtifactStagingDirectory)'
        cmakeBuildType: 'Release'
        cmakeGenerator: 'Ninja'