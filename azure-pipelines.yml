# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

jobs:
- job: Build
  strategy:
    matrix:
      linux:
        imageName: "ubuntu-20.04"
        vcpkgRsp: "vcpkg-x64-linux.txt"
        cmakeChoice: CMakeListsTxtAdvanced
      mac:
        imageName: "macos-latest"
        vcpkgRsp: "vcpkg-x64-osx.txt"
        cmakeChoice: CMakeListsTxtAdvanced
      windows:
        imageName: "windows-latest"
        vcpkgRsp: "vcpkg-x64-windows-static.txt"
        cmakeChoice: CMakeSettingsJson
    maxParallel: 3
  pool:
    vmImage: $(imageName)
  steps:
  - checkout: self
    submodules: recursive
  - task: Cache@2
    displayName: 'Cache vcpkg artifacts'
    inputs:
      key: $(Build.SourcesDirectory)/$(vcpkgRsp) | "$(Build.SourcesDirectory)/.git/modules/vcpkg/HEAD" | "$(Agent.OS)"
      path: '$(Build.SourcesDirectory)/vcpkg'
  - task: run-vcpkg@0
    displayName: 'Run vcpkg'
    inputs:
      vcpkgArguments: '@$(Build.SourcesDirectory)/$(vcpkgRsp)'
      vcpkgDirectory: $(Build.SourcesDirectory)/vcpkg
  - task: run-cmake@0
    displayName: 'Run CMake'
    inputs:
      cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
      useVcpkgToolchainFile: true
      buildDirectory: '$(Build.ArtifactStagingDirectory)'
      buildWithCMakeArgs: '-- -v'
